"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from django.core.urlresolvers import reverse_lazy

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ugx!ze3px!sx2j0@y$@#kxup*3m@e0q%$_(x=q%f)lt(m3(r1d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'account',              # 账户详情
    'blog',                 # 博客
    'images',               # 相册
    'sorl.thumbnail',       # 缩略图
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',      # 内容类型
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social.apps.django_app.default',           # 第三方登录接口APP程序
    'actions',          # 操作详情

)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',             # 通过request操作当前会话
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',          # 使用sessions将用户和request进行关联
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',             # 全局消息框架
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.locale.LocaleMiddleware',   # 更改admin站点语言显示
)



ROOT_URLCONF = 'bookmarks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmarks.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        'ENGINE': 'django.db.backends.mysql',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3')
        'NAME': 'bookmarks',
        'USER': 'root',
        'PASSWORD': 'wp1993524.',
        'HOST': 'localhost',
        'PORT': '3306'
        }

    }



# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'

# TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
# 管理用户上传的多媒体文件的主URL
MEDIA_URL = '/media/'
# 本地保存的路径,动态生成
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

# 登录成功后login视图没有获取到next参数会默认重定向到那个URL,例如重定向到dashboard
LOGIN_REDIRECT_URL = reverse_lazy('dashboard')
# 重定向用户登录的URL
LOGIN_URL = reverse_lazy('login')
# 重定向用户退出的URL
LOGOUT_URL = reverse_lazy('logout')

# 邮箱配置:
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST='smtp.163.com' #SMTP服务器
EMAIL_PORT = 25           #SMTP端口
EMAIL_HOST_USER = 'shugaocheng@163.com' #用该邮箱发邮件，邮箱必须有效
EMAIL_HOST_PASSWORD = 'wp1993524'  #邮箱密码，必须正确
EMAIL_USE_TLS = True           #与SMTP服务器通信时，是否启动TLS连接（安全连接），默认为false
EMAIL_TO_RECEIPT = ['shugaocheng@163.com','70016803@qq.com']

# 认证顺序,第一个认证完成后就不在继续认证.
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',   # 认证框架,用户名和密码认证
    'account.authentication.EmailAuthBackend',     # 自定义认证框架,邮箱认证和用户ID认证,实现邮箱登录
    'social.backends.qq.QQOAuth2',                 # QQ第三方登录
    'social.backends.facebook.FacebookOAuth2',     # facebook第三方登录
)

SOCIAL_AUTH_FACEBOOK_KEY = '756986424463692'  # Facebook App ID
SOCIAL_AUTH_FACEBOOK_SECRET = '56e5b1e58833b1b68da68f5b838846ba' # Facebook App Secret
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']

THUMBNAIL_DEBUG = True

# 等价于def get_absolute_url():   url:account/users/admin
ABSOLUTE_URL_OVERRIDES = {
    'auth.user':lambda u:reverse_lazy('user_detail',args=[u.username])
}

# 添加redis数据库连接
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0